* Ускорение работы Rails
- перечислить все варианты ускорения запуска Rails и работы с его командами

* Объяснить, почему не стоит использовать Spork
- это просто Drb-сервер для запуска тестов, в то время как другие средства (Zeus, Spring) предоставляют больше Rails-команд
для быстрого запуска
- проект не поддерживается уже больше года и использует устаревшие версии многих гемов в Gemfile

* Zeus

** Пару слов о Zeus и соответствующий слайд
** Демонстрация базовых операций с Zeus
- .../sample_app
- rails new .
- gem 'zeus' + bundle
- zeus start
- zeus g: создать скаффолд для user и article
- продемонстрировать работу zeus s
- zeus rake: накатить миграции zeus rake db:migrate
- изменения файлов и автоперезагрузка Zeus: изменить root url на users#index
- миграция тестовой базы (показать то, что с "мгновенными" переменными окружения Zeus намеренно не дружит)
- zeus c: поиграться с пользователями

* Zeus RSpec

- gem 'rspec-rails', '~> 3.0.0'
- gem 'shoulda-matchers'
- bundle
- добавить тест article belongs_to user
- демонстрация
- (возможно) сравнительная демонстрация на реальном проекте типа cityfalcon (только spec/features)

* Spring

- пару слов о Spring и соответствующий слайд
- spring status
- rails c: первый запуск, выход, проверка spring status, второй запуск
- rails s
- bin/rake test spec; после прогона тестов проверить spring status - должен быть запущен клиент test environment

* Сравнение Zeus и Spring

* Guard
- пару слов о Guard и соответствующий слайд

* guard-rspec

- Вводный слайд
- Установка.
- Guardfile - структура. Конфигурирование секции guard-rspec в Guardfile.
- Демонстрация работы. Показать, что произойдет при нажатии Enter (запуск всех плагинов)
- Показать некоторые команды Guard, в частности pause

* guard-livereload

- вводный слайд
- установка guard-livereload и подключение middleware
- запуск сервера, guard
- проверка перезагрузки (модификация JS/ERB)
- проверка без перезагрузки (модификация CSS)
